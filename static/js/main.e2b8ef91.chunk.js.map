{"version":3,"sources":["components/BrowsePanel.tsx","components/ElementTree.jsx","components/RoundField.tsx","components/Test1.tsx","components/App.tsx","index.tsx"],"names":["BrowsePanel","id","className","to","G6","window","data","nodes","x","y","edges","source","target","ElementTree","props","useEffect","graph","Graph","container","width","height","render","RoundField","children","Test1","useState","radioValue","setRadioValue","inputText","setInputText","selectValue","setSelectValue","type","value","checked","onClick","htmlFor","onChange","e","currentTarget","App","style","display","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"wTAYeA,EARK,WAClB,OAAQ,sBAAKC,GAAG,eAAR,UACN,cAAC,IAAD,CAAMC,UAAU,OAAOC,GAAG,IAA1B,kBACA,cAAC,IAAD,CAAMD,UAAU,OAAOC,GAAG,SAA1B,mBACA,cAAC,IAAD,CAAMD,UAAU,OAAOC,GAAG,SAA1B,uB,OCPEC,EAAKC,OAAOD,GAEZE,EAAO,CAEXC,MAAO,CACL,CACEN,GAAI,QACJO,EAAG,IACHC,EAAG,KAEL,CACER,GAAI,QACJO,EAAG,IACHC,EAAG,MAIPC,MAAO,CACL,CACEC,OAAQ,QACRC,OAAQ,WAmBCC,EAdK,SAACC,GAWnB,OAVAC,qBAAU,WACR,IAAMC,EAAQ,IAAIZ,EAAGa,MAAM,CACzBC,UAAW,iBACXC,MAAO,IACPC,OAAQ,MAEVJ,EAAMV,KAAKA,GACXU,EAAMK,WACL,IAEI,qBAAKpB,GAAG,oB,QCxBFqB,G,MANI,SAACR,GAClB,OAAQ,qBAAKZ,UAAU,cAAf,SACLY,EAAMS,aC8CIC,G,MAnDD,WAAO,IAAD,EACiBC,mBAAS,WAD1B,mBACZC,EADY,KACAC,EADA,OAEeF,mBAAS,IAFxB,mBAEZG,EAFY,KAEDC,EAFC,OAGmBJ,mBAAS,IAH5B,mBAGZK,EAHY,KAGCC,EAHD,KAKnB,OACC,sBAAK9B,GAAG,QAAR,UACC,eAAC,EAAD,WACC,yCACA,uBACC+B,KAAK,QACLC,MAAM,UACNhC,GAAG,UACHiC,QAAwB,YAAfR,EACTS,QAAS,kBAAMR,EAAc,cAE9B,uBAAOS,QAAQ,UAAf,qBACA,uBACCJ,KAAK,QACLC,MAAM,UACNhC,GAAG,UACHiC,QAAwB,YAAfR,EACTS,QAAS,kBAAMR,EAAc,cAE9B,uBAAOS,QAAQ,UAAf,wBAED,eAAC,EAAD,WACC,yCACA,uBACCJ,KAAK,OACLC,MAAOL,EACPS,SAAU,SAAAC,GACTT,EAAaS,EAAEC,cAAcN,aAIhC,eAAC,EAAD,WACC,yCACA,yBACCA,MAAOH,EACPO,SAAU,SAAAC,GAAC,OAAIP,EAAeO,EAAEC,cAAcN,QAF/C,UAIC,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,UAAd,gCCfUO,MA1Bf,WACE,OACE,qBAAKtC,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,sBAAKuC,MAAO,CAAEC,QAAS,QAAvB,UACE,qBAAKxC,UAAU,OAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyC,KAAK,SAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,yCAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,8CAIN,cAAC,EAAD,CAAarC,KAAM,cCrB7BsC,IAASvB,OACP,cAAC,IAAMwB,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e2b8ef91.chunk.js","sourcesContent":["import '../stylesheets/BrowsePanel.scss';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst BrowsePanel = () => {\n  return (<div id=\"browse-panel\">\n    <Link className=\"link\" to=\"/\">Home</Link>\n    <Link className=\"link\" to=\"/test1\">test1</Link>\n    <Link className=\"link\" to=\"/test2\">test2</Link>\n  </div>);\n};\n\nexport default BrowsePanel;\n","import React, { useEffect } from 'react';\nconst G6 = window.G6;\n\nconst data = {\n  // The array of nodes\n  nodes: [\n    {\n      id: 'node1', // String, unique and required\n      x: 100, // Number, the x coordinate\n      y: 200, // Number, the y coordinate\n    },\n    {\n      id: 'node2', // String, unique and required\n      x: 300, // Number, the x coordinate\n      y: 200, // Number, the y coordinate\n    },\n  ],\n  // The array of edges\n  edges: [\n    {\n      source: 'node1', // String, required, the id of the source node\n      target: 'node2', // String, required, the id of the target node\n    },\n  ],\n};\n\nconst ElementTree = (props) => {\n  useEffect(() => {\n    const graph = new G6.Graph({\n      container: 'tree-container', // String | HTMLElement, required, the id of DOM element or an HTML node\n      width: 500, // Number, required, the width of the graph\n      height: 700, // Number, required, the height of the graph\n    });\n    graph.data(data); // Load the data defined in Step 2\n    graph.render(); // Render the graph\n  }, []);\n\n  return <div id=\"tree-container\" />\n};\n\nexport default ElementTree;\n","import React from 'react';\nimport '../stylesheets/RoundField.scss';\n\ntype RoundFieldProps = {\n  children: React.ReactNode;\n};\n\nconst RoundField = (props: RoundFieldProps) => {\n  return (<div className='round-field'>\n    {props.children}\n  </div>);\n};\n\nexport default RoundField;\n","import React, { useState } from 'react';\nimport RoundField from './RoundField';\nimport '../stylesheets/Test1.scss';\n\nconst Test1 = () => {\n\tconst [radioValue, setRadioValue] = useState('option1');\n\tconst [inputText, setInputText] = useState('');\n\tconst [selectValue, setSelectValue] = useState('');\n\n\treturn (\n\t\t<div id=\"test1\">\n\t\t\t<RoundField>\n\t\t\t\t<h5>Field A</h5>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\tvalue=\"option1\"\n\t\t\t\t\tid=\"option1\"\n\t\t\t\t\tchecked={radioValue === 'option1'}\n\t\t\t\t\tonClick={() => setRadioValue('option1')}\n\t\t\t\t/>\n\t\t\t\t<label htmlFor=\"option1\">option1</label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\tvalue=\"option2\"\n\t\t\t\t\tid=\"option2\"\n\t\t\t\t\tchecked={radioValue === 'option2'}\n\t\t\t\t\tonClick={() => setRadioValue('option2')}\n\t\t\t\t/>\n\t\t\t\t<label htmlFor=\"option2\">option2</label>\n\t\t\t</RoundField>\n\t\t\t<RoundField>\n\t\t\t\t<h5>Field B</h5>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={inputText}\n\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\tsetInputText(e.currentTarget.value);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</RoundField>\n\t\t\t<RoundField>\n\t\t\t\t<h5>Field C</h5>\n\t\t\t\t<select\n\t\t\t\t\tvalue={selectValue}\n\t\t\t\t\tonChange={e => setSelectValue(e.currentTarget.value)}\n\t\t\t\t>\n\t\t\t\t\t<option value=\"option3\">option3</option>\n\t\t\t\t\t<option value=\"option4\">option4</option>\n\t\t\t\t\t<option value=\"option5\">option5</option>\n\t\t\t\t</select>\n\t\t\t</RoundField>\n\t\t</div>\n\t);\n};\n\nexport default Test1;\n","import '../stylesheets/App.scss';\nimport React from 'react';\nimport BrowsePanel from './BrowsePanel';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport ElementTree from './ElementTree';\nimport Test1 from './Test1';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <BrowsePanel />\n        <div style={{ display: 'flex' }}>\n          <div className=\"page\">\n            <Switch>\n              <Route path=\"/test1\">\n                <Test1 />\n              </Route>\n              <Route path=\"/test2\">\n                <div>YOYO</div>\n              </Route>\n              <Route path=\"/\">\n                <div>Home</div>\n              </Route>\n            </Switch>\n          </div>\n          <ElementTree data={{}}/>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}